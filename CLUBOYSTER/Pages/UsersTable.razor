@using CLUBOYSTER.Data;
@if (message != null)
{
    <strong class="fw-bold bg-danger text-black fs-3">@message</strong>
}

@if (users == null)
{
    <strong>Загрузка...</strong>
}
else
{
    <h2 class="fw-bold text-white">Таблица пользователей</h2>
    <div style="height:auto; width:95%; align-content:center">
    <table class="table table-dark fw-bold border-2" style="height:auto;">
      <thead class="thead-dark">
        <tr>
          <th scope="col">Логин</th>
          <th scope="col">Имя</th>
          <th scope="col">Почта</th>
          <th scope="col">Роль</th>
          <th scope="col">Оклад</th>
          <th scope="col">Соотрудничать</th>
        </tr>
      </thead>
      <tbody>
          @foreach(var item in users)
            {
                @if (item.GetType().Name == "User")
                {
                    <tr>
                        <td>@item.Login</td>
                        <td>@item.FirstName</td>
                        <td>@item.Email</td>
                        <td><input id="name" type="text" placeholder="Введите роль" class="font-italic mb-2 fw-bold text-white" @bind-value="_role"/></td>
                        <td><input id="name" type="text" placeholder="Введите оклад" class="fw-bold font-italic mb-2 text-white" @bind-value="_salary"></input></td>
                        <td><button type="button" class="btn btn-outline-light w-100 fw-bold" style="margin-top:0" @onclick="() => EmploeeGo(item)" data-mdb-ripple-color="dark">Добавить</button></td>
                    </tr>
                }
            }
      </tbody>
    </table>
    </div>
}

@code {
    [Parameter]
    public List<User>? users { get; set; }

    private string? _role;
    private string? _salary;

    private string? message;

    private DateTime start;
    private DateTime end;

    protected override async Task OnInitializedAsync()
    {
        users = MongoDb.FindUsers();    
    }

    private async Task EmploeeGo(User user)
    {
        if (_role != null && _salary != null)
        {
            switch (_role)
            {
                case "Бухгалтер":
                    start = DateTime.Now.AddDays(2);
                    end = start.AddHours(5);
                    break;
                case "Менеджер по закупкам":
                    start = DateTime.Now.AddDays(5);
                    end = start.AddHours(8);
                    break;
            }

            users.Remove(user);
            user = new Employee()
                {
                    Login = user.Login,
                    Email = user.Email,
                    FirstName = user.FirstName,
                    SecondName = user.SecondName,
                    Surname = user.Surname,
                    Password = user.Password,
                    Phone = user.Phone,
                    Salary = float.Parse(_salary),
                    Role = _role,
                    StartWork = start,
                    EndWork = end,

                };
            MongoDb.ReplaceByName(user, user.Login);
        }
        else
        {
            message = "Введите поля Роли или Оклада";
        }
    }


}
